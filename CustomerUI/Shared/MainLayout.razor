@inherits LayoutComponentBase
@using CustomerUI.Services
@using CustomerUI.Account
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject AuthenticationStateProvider authStateProvider


<PageTitle>CustomerUI</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>

        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <p><strong>Welcome, @UserDisplayName! </strong></p>
                    <a href="#" @onclick="Logout">Logout</a>
                </Authorized>

                <NotAuthorized>
                    <a href="/login">Login</a>
                    <a href="/register">Register</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private string UserDisplayName = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Retrieve user display name from local storage
            UserDisplayName = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "userDisplayName");
            await Task.Delay(100); // Introduce a delay
            StateHasChanged(); // Notify Blazor to re-render the component
        }
    }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthentication)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        Navigation.NavigateTo("/login", true);
    }
}